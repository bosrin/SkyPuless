{"ast":null,"code":"var _jsxFileName = \"C:\\\\project-file\\\\weathermate\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  city\n}) => {\n  _s();\n  const API_KEY = \"97bfa96f153a4b679fc124940251110\";\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (!city) return;\n    const fetchWeather = async () => {\n      setLoading(true);\n      setError(\"\");\n      try {\n        const res = await fetch(`https://api.weatherapi.com/v1/current.json?key=${API_KEY}&q=${city}&aqi=no`);\n        if (!res.ok) throw new Error(\"Failed to fetch weather data.\");\n        const data = await res.json();\n        setWeather(data);\n      } catch (err) {\n        console.error(err);\n        setError(\"Unable to fetch weather data. Please try again.\");\n        setWeather(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeather();\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dashboard__title\",\n      children: [\"Live Weather in \", city || \"Your City\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dashboard__loading\",\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dashboard__error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), weather && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [weather.location.name, \", \", weather.location.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather.current.condition.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: weather.current.condition.icon,\n          alt: weather.current.condition.text,\n          className: \"weather-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [weather.current.temp_c, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Feels like \", weather.current.feelslike_c, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity: \", weather.current.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind: \", weather.current.wind_kph, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"TEzTgWfuitLvVqYMzNHwNcXmhSc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","city","_s","API_KEY","weather","setWeather","loading","setLoading","error","setError","fetchWeather","res","fetch","ok","Error","data","json","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","location","name","country","current","condition","text","src","icon","alt","temp_c","feelslike_c","humidity","wind_kph","_c","$RefreshReg$"],"sources":["C:/project-file/weathermate/src/Components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = ({ city }) => {\r\n  const API_KEY = \"97bfa96f153a4b679fc124940251110\";\r\n  const [weather, setWeather] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!city) return;\r\n\r\n    const fetchWeather = async () => {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      try {\r\n        const res = await fetch(\r\n          `https://api.weatherapi.com/v1/current.json?key=${API_KEY}&q=${city}&aqi=no`\r\n        );\r\n        if (!res.ok) throw new Error(\"Failed to fetch weather data.\");\r\n        const data = await res.json();\r\n        setWeather(data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(\"Unable to fetch weather data. Please try again.\");\r\n        setWeather(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchWeather();\r\n  }, [city]);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2 className=\"dashboard__title\">Live Weather in {city || \"Your City\"}</h2>\r\n\r\n      {loading && <p className=\"dashboard__loading\">Loading weather data...</p>}\r\n\r\n      {error && <p className=\"dashboard__error\">{error}</p>}\r\n\r\n      {weather && !loading && !error && (\r\n        <div className=\"weather-card\">\r\n          <div className=\"weather-header\">\r\n            <h3>\r\n              {weather.location.name}, {weather.location.country}\r\n            </h3>\r\n            <p>{weather.current.condition.text}</p>\r\n          </div>\r\n\r\n          <div className=\"weather-main\">\r\n            <img\r\n              src={weather.current.condition.icon}\r\n              alt={weather.current.condition.text}\r\n              className=\"weather-icon\"\r\n            />\r\n            <div className=\"temp-info\">\r\n              <h2>{weather.current.temp_c}°C</h2>\r\n              <p>Feels like {weather.current.feelslike_c}°C</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"weather-stats\">\r\n            <p>Humidity: {weather.current.humidity}%</p>\r\n            <p>Wind: {weather.current.wind_kph} km/h</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}