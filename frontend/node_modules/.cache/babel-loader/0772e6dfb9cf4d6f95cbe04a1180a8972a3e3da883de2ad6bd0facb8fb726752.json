{"ast":null,"code":"var _jsxFileName = \"C:\\\\project-file\\\\weathermate\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  city\n}) => {\n  _s();\n  const API_KEY = \"97bfa96f153a4b679fc124940251110\";\n  const [weather, setWeather] = useState(null);\n\n  // Fetch live weather when city changes\n  useEffect(() => {\n    if (!city) return;\n    fetch(`https://api.weatherapi.com/v1/current.json?key=${API_KEY}&q=${city}&aqi=no`).then(res => res.json()).then(data => setWeather(data)).catch(err => console.error(\"Error fetching weather:\", err));\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dashboard__title\",\n      children: [\"Live Weather in \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), weather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [weather.location.name, \", \", weather.location.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: weather.current.condition.icon,\n          alt: \"weather icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [weather.current.temp_c, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [weather.current.condition.text, \" | Feels like \", weather.current.feelslike_c, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weather.current.humidity, \"% | Wind: \", weather.current.wind_kph, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"zh6OemVMK1sGCMM7fACoVGDcjjs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","city","_s","API_KEY","weather","setWeather","fetch","then","res","json","data","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","location","name","country","src","current","condition","icon","alt","temp_c","text","feelslike_c","humidity","wind_kph","_c","$RefreshReg$"],"sources":["C:/project-file/weathermate/src/Components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = ({ city }) => {\r\n  const API_KEY = \"97bfa96f153a4b679fc124940251110\";\r\n  const [weather, setWeather] = useState(null);\r\n\r\n  // Fetch live weather when city changes\r\n  useEffect(() => {\r\n    if (!city) return;\r\n\r\n    fetch(`https://api.weatherapi.com/v1/current.json?key=${API_KEY}&q=${city}&aqi=no`)\r\n      .then((res) => res.json())\r\n      .then((data) => setWeather(data))\r\n      .catch((err) => console.error(\"Error fetching weather:\", err));\r\n  }, [city]);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2 className=\"dashboard__title\">Live Weather in {city}</h2>\r\n\r\n      {weather ? (\r\n        <div className=\"weather-card\">\r\n          <h3>{weather.location.name}, {weather.location.country}</h3>\r\n          <div className=\"weather-main\">\r\n            <img src={weather.current.condition.icon} alt=\"weather icon\" />\r\n            <h2>{weather.current.temp_c}°C</h2>\r\n          </div>\r\n          <p>{weather.current.condition.text} | Feels like {weather.current.feelslike_c}°C</p>\r\n          <p>Humidity: {weather.current.humidity}% | Wind: {weather.current.wind_kph} km/h</p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading weather data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}